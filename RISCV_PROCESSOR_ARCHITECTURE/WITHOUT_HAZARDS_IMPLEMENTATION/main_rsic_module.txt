`timescale 1ns / 1ps

module Risc_processor(i_clk, i_rst);
    //input declarations
    input i_clk, i_rst;
    
    //wire declarations
    wire PCSrcE, RegWriteE, ALUSrcE, MemwriteE, ResultSrcE, BranchE; 
    wire RegWriteM, ResultSrcM, MemwriteM;
    wire RegWriteW, ResultSrcW;
    wire [31:0]PCTargetE, InstrD, PCD, PCPlus4D, ResultW, RD1E, RD2E, PCE, ImmExtE, PCPlus4E; 
    wire [31:0]ALUResultM, WriteDataM, PCPlus4M;
    wire [31:0]ALUResultW, ReaddataW, PCPlus4W;
    wire [2:0]ALUcontrolE;
    wire [4:0]RDW, RdE, RdM;
    
    //module istantiations
    
    //////////////////////////////////////fetch cycle//////////////////////////
    Fetch_cycle Fetch_cycle(
    .i_clk(i_clk), 
    .i_rst(i_rst),
    .PCSrcE(PCSrcE), 
    .PCTargetE(PCTargetE), 
    .InstrD(InstrD), 
    .PCD(PCD), 
    .PCPlus4D(PCPlus4D)
    );
    
    //////////////////////////////////////Decode cycle//////////////////////////
    Decode_cycle Decode_cycle( 
    .i_clk(i_clk), 
    .i_rst(i_rst), 
    .RegWriteW(RegWriteW), 
    .InstrD(InstrD), 
    .PCD(PCD), 
    .PCPlus4D(PCPlus4D), 
    .RDW(RDW), 
    .ResultW(ResultW), 
    .RegWriteE(RegWriteE), 
    .ResultSrcE(ResultSrcE), 
    .MemwriteE(MemwriteE), 
    .BranchE(BranchE), 
    .ALUcontrolE(ALUcontrolE), 
    .ALUSrcE(ALUSrcE), 
    .RD1E(RD1E), 
    .RD2E(RD2E), 
    .PCE(PCE), 
    .RdE(RdE), 
    .ImmExtE(ImmExtE), 
    .PCPlus4E(PCPlus4E)
 );
 
    //////////////////////////////////////execute cycle//////////////////////////
    Execute_cycle Execute_cycle(
    .i_clk(i_clk), 
    .i_rst(i_rst),  
    .RegWriteE(RegWriteE), 
    .ResultSrcE(ResultSrcE), 
    .MemwriteE(MemwriteE), 
    .BranchE(BranchE), 
    .ALUcontrolE(ALUcontrolE), 
    .ALUSrcE(ALUSrcE), 
    .RD1E(RD1E), 
    .RD2E(RD2E), 
    .PCE(PCE), 
    .RdE(RdE), 
    .ImmExtE(ImmExtE), 
    .PCPlus4E(PCPlus4E),
    .PCSrcE(PCSrcE), 
    .PCTargetE(PCTargetE), 
    .RegWriteM(RegWriteM), 
    .ResultSrcM(ResultSrcM), 
    .MemwriteM(MemwriteM), 
    .ALUResultM(ALUResultM), 
    .WriteDataM(WriteDataM), 
    .RdM(RdM), 
    .PCPlus4M(PCPlus4M)
    );
    
    //////////////////////////////////////memory cycle//////////////////////////
    memory_cycle memory_cycle(
    .i_clk(i_clk), 
    .i_rst(i_rst), 
    .PCSrcE(PCSrcE), 
    .PCTargetE(PCTargetE), 
    .RegWriteM(RegWriteM), 
    .ResultSrcM(ResultSrcM), 
    .MemwriteM(MemwriteM), 
    .ALUResultM(ALUResultM), 
    .WriteDataM(WriteDataM), 
    .RdM(RdM), 
    .PCPlus4M(PCPlus4M),
    .RegWriteW(RegWriteW), 
    .ResultSrcW(ResultSrcW), 
    .ALUResultW(ALUResultW), 
    .ReaddataW(ReaddataW), 
    .PCPlus4W(PCPlus4W), 
    .RdW(RDW)
    );
    
    //////////////////////////////////////Writeback cycle//////////////////////////
    Writeback_cycle Writeback_cycle(
    .RegWriteW(RegWriteW), 
    .ResultSrcW(ResultSrcW), 
    .ALUResultW(ALUResultW), 
    .ReaddataW(ReaddataW), 
    .PCPlus4W(PCPlus4W), 
    .RdW(RDW), 
    .ResultW(ResultW)
    );
endmodule
